<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xBy" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIUAAAALCAYAAABRYE6UAAAABGdBTUEAALGPC/xhBQAABK1JREFUWEft
        Vf9P1GUcv39E2Rr9UOE+C4YUQnbCyY471vRYm0BToBjsRAqExc0dDAhj7FiE0wFDE0M7kjApdK76A9pa
        a6u1MhtzZirJcXCEh7pXzwv2Zk+ffe4bo+aKH1675/P+9rzfr+f1PGdzuwvgdubCXfQC3MV52Ls3Fy/b
        d2L37ucVjIRIS0vbwn8MtqKiXFy79ukqrl6dxPT0BKamgrh06QImJs5hfPwMzp8fxujoKZweeR9DQ304
        ebIH/f1dcUXR3t6OxsZGS99G0d3djYqKCktfLKSaw9jBwcFVVFdXW8akAtZJtWczWMPlcln6/gnYnM68
        VUF0dHbC7/fD5/OhubkZDQ0NqKutQ1VVFcrLy1FaWoqSkhI4HA68lJ+PQKDtXxdFIBBImeCN5BDs/38r
        iholiq/VC3FGCWJYCeLU0aMYUILoq61FT2UlOpUg/B4P3na78JajEIfz8vDGzmyM9fgSioIYGBhYHYpr
        2kk0b6/EcVj6MzIy1m1mMIcxZoi/tbV13cbarJUoh2IRG9d2u33dR1iJgjF6ni56zqH7RAhcs5bY9Zqx
        emD/eg4homAMZxS71OMva4iP65ycnPW9UoHtq8JsPP78Ih4rYh81NeHhkSNYUYKIKkE8KCvDn/s9iKiG
        FgsLEVaCmM/KxtyOHVjsakEwgSgoCA7D5rgmUVyzaSGAxCb7onBQ860TMliXZJIUvZ5VjhmMp7B0m5Uo
        GOP1ev9mI2QmczyhHxD7IA/mGELvgWvuLz7WEFHo85BD+libe+s9MM6qn2Rg+1Id7KPLwTVB1CtB1NQg
        eugQlg8cUILYj0hxMRYLClYFEcrKwpwi/o/0p7HQ9iY+SuHvQydZX5MkDiVx8WB1wBSBPjz9jJNvqxyC
        h0sSBfohEHqPAn4zlnPJIRHxDpvxsj9z+C2+WD2wlke9zhJHn1wuPV5AH3vT57bqP1nYvqAoJseUIOrX
        BHHw4Jog9u1DxOnEwp49CO/ahVBmphLEc5hNT8e97dsRPubF2AZFQZJ4mBxcj0mEzRKF3DB5rZgvByKI
        RSoPhj2zrtxs8546uI/sr4siXg+0xxOF1SVivt5DrP6Tge1KqxLFDx9i5bIX0cnXsTz+GpbGXkVk9BUs
        jBQhPGhH6MSLmHsvE7O9z+Le8XTc6diG+enDGElSFEIGf/nNZ563gUMIKcnA/NdA8LaxDomy+vuwyiHh
        3J/x3J/5yYpCwIOW10EOyyw+QrfroojXg94zbTp3zDHPQ2yqKKYvGHgYHkX0di2Wb1Vi6WYZIjMeLNxw
        IXzdgdBP+bj/Yw5mvzdw97tncOfbp3D7m20IzdRjuCu2KNgQhxGYG5TD1G2JIKQKaCOpQhzBNW3xcgjJ
        IclcE7STcD2ekEPV92GeLgIRiTlHX+uiIGL1QJFILb5G5ElEwV9+0yegfXNFcdbAyv0RRGeHFE7gwd1+
        LP/ei6XfjmPpVgciN9uwOOPDwq8tCN9owvwvDQhd9yL0cx1G1CtjVTQR5EbrpG7hyYHtkz4D070GPnvH
        wNS7Bi62GRhXCAYMfKxswQ4D59TvB8p2+pha+w2cbVFQghhoSl0UcjusnsAtPAlIw1+dXhbhcAOVUAAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>